{
  "info": {
    "_postman_id": "dashboard-module-collection-2025",
    "name": "BlogPlatform Dashboard Module",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Postman collection for BlogPlatform Dashboard and analytics endpoints"
  },
  "item": [
    {
      "name": "Get Admin Summary",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" }
        ],
        "url": "{{base_url}}/dashboard/admin/summary"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Admin summary fetched', function () { pm.response.to.have.status(200); });",
              "const summary = pm.response.json();",
              "pm.expect(summary).to.have.keys(['totalUsers', 'totalPosts', 'totalComments']);"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Admin Stats",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" }
        ],
        "url": "{{base_url}}/dashboard/admin/stats"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Admin stats fetched', function () { pm.response.to.have.status(200); });",
              "const stats = pm.response.json();",
              "pm.expect(stats).to.have.keys(['postsPerStatus', 'usersPerRole']);"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Author Summary",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{author_access_token}}" }
        ],
        "url": "{{base_url}}/dashboard/author/summary"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Author summary fetched', function () { pm.response.to.have.status(200); });",
              "const summary = pm.response.json();",
              "pm.expect(summary).to.have.keys(['totalPosts', 'publishedPosts', 'totalComments']);"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Author Stats",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{author_access_token}}" }
        ],
        "url": "{{base_url}}/dashboard/author/stats"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Author stats fetched', function () { pm.response.to.have.status(200); });",
              "const stats = pm.response.json();",
              "pm.expect(stats).to.have.property('postsByDate');"
            ]
          }
        }
      ]
    },
    {
      "name": "Get User Summary",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{user_access_token}}" }
        ],
        "url": "{{base_url}}/dashboard/user/summary"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('User summary fetched', function () { pm.response.to.have.status(200); });",
              "const summary = pm.response.json();",
              "pm.expect(summary).to.have.keys(['favoritePostsCount', 'commentsMade']);"
            ]
          }
        }
      ]
    }
  ]
}
