{
  "info": {
    "_postman_id": "users-module-collection-2025",
    "name": "BlogPlatform Users Module",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Postman collection for BlogPlatform Users API endpoints with RBAC and token handling"
  },
  "item": [
    {
      "name": "Get All Users",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{admin_access_token}}"
          }
        ],
        "url": "{{base_url}}/users"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200 OK', () => { pm.response.to.have.status(200); });",
              "// Store first user ID for downstream requests",
              "const users = pm.response.json();",
              "if (users.length > 0) {",
              "  pm.environment.set('test_user_id', users[0]._id);",
              "  console.log('Test user ID saved:', users[0]._id);",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "Get User By ID",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" }
        ],
        "url": "{{base_url}}/users/{{test_user_id}}"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('User retrieved successfully', () => { pm.response.to.have.status(200); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Update User",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": "{{base_url}}/users/{{test_user_id}}",
        "body": {
          "mode": "raw",
          "raw": "{ \"name\": \"Updated Name\", \"role\": \"author\" }"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('User updated', () => { pm.response.to.have.status(200); });",
              "const user = pm.response.json();",
              "pm.expect(user.name).to.eql('Updated Name');",
              "pm.expect(user.role).to.eql('author');"
            ]
          }
        }
      ]
    },
    {
      "name": "Delete User",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" }
        ],
        "url": "{{base_url}}/users/{{test_user_id}}"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('User deleted', () => { pm.response.to.have.status(200); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Get My Profile (Any Role)",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{active_access_token}}" }
        ],
        "url": "{{base_url}}/users/profile/me"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Profile fetched', () => { pm.response.to.have.status(200); });",
              "const profile = pm.response.json();",
              "pm.environment.set('my_user_id', profile._id);"
            ]
          }
        }
      ]
    },
    {
      "name": "Update My Profile",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Authorization", "value": "Bearer {{active_access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": "{{base_url}}/users/profile/me",
        "body": {
          "mode": "raw",
          "raw": "{ \"name\": \"Updated Self Name\" }"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Profile updated', () => { pm.response.to.have.status(200); });",
              "const profile = pm.response.json();",
              "pm.expect(profile.name).to.eql('Updated Self Name');"
            ]
          }
        }
      ]
    },
    {
      "name": "Update User Role (Admin Only)",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": "{{base_url}}/users/{{test_user_id}}/role",
        "body": {
          "mode": "raw",
          "raw": "{ \"role\": \"user\" }"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('User role updated', () => { pm.response.to.have.status(200); });",
              "const user = pm.response.json();",
              "pm.expect(user.role).to.eql('user');"
            ]
          }
        }
      ]
    },
    {
      "name": "Update User Status (Admin Only)",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": "{{base_url}}/users/{{test_user_id}}/status",
        "body": {
          "mode": "raw",
          "raw": "{ \"isActive\": true }"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('User status updated', () => { pm.response.to.have.status(200); });",
              "const user = pm.response.json();",
              "pm.expect(user.isActive).to.eql(true);"
            ]
          }
        }
      ]
    }
  ]
}
