{
  "info": {
    "_postman_id": "posts-module-collection-2025",
    "name": "BlogPlatform Posts Module",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Postman collection for BlogPlatform Posts API endpoints with variable mapping and RBAC"
  },
  "item": [
    {
      "name": "Create Post (Author)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{author_access_token}}" }
        ],
        "url": "{{base_url}}/posts",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Testing Post Title\",\n  \"content\": \"Sample post content for backend testing.\",\n  \"categories\": [\"{{category_id}}\"],\n  \"tags\": [\"{{tag_id}}\"]\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Post created', function () { pm.response.to.have.status(201); });",
              "var jsonData = pm.response.json();",
              "pm.environment.set('latest_post_id', jsonData._id);",
              "console.log('Latest post ID set for further tests');"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Posts (Public)",
      "request": {
        "method": "GET",
        "url": "{{base_url}}/posts"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Posts fetched', function () { pm.response.to.have.status(200); });",
              "var posts = pm.response.json();",
              "if (posts.length > 0) { pm.environment.set('latest_post_id', posts[0]._id); }"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Post by ID (Public)",
      "request": {
        "method": "GET",
        "url": "{{base_url}}/posts/{{latest_post_id}}"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Single post fetched', function () { pm.response.to.have.status(200); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Post (Author)",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{author_access_token}}" }
        ],
        "url": "{{base_url}}/posts/{{latest_post_id}}",
        "body": {
          "mode": "raw",
          "raw": "{ \"title\": \"Updated Post Title\", \"content\": \"Updated post content.\" }"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Post updated', function () { pm.response.to.have.status(200); });",
              "var post = pm.response.json();",
              "pm.expect(post.title).to.eql('Updated Post Title');"
            ]
          }
        }
      ]
    },
    {
      "name": "Approve Post (Admin)",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Authorization", "value": "Bearer {{admin_access_token}}" }
        ],
        "url": "{{base_url}}/posts/{{latest_post_id}}/approve"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Post approved', function () { pm.response.to.have.status(200); });",
              "var post = pm.response.json();",
              "pm.expect(post.status).to.eql('approved');"
            ]
          }
        }
      ]
    },
    {
      "name": "Publish Post (Author)",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Authorization", "value": "Bearer {{author_access_token}}" }
        ],
        "url": "{{base_url}}/posts/{{latest_post_id}}/publish"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Post published', function () { pm.response.to.have.status(200); });",
              "var post = pm.response.json();",
              "pm.expect(post.status).to.eql('published');"
            ]
          }
        }
      ]
    },
    {
      "name": "Unpublish Post (Author)",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Authorization", "value": "Bearer {{author_access_token}}" }
        ],
        "url": "{{base_url}}/posts/{{latest_post_id}}/unpublish"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Post unpublished', function () { pm.response.to.have.status(200); });",
              "var post = pm.response.json();",
              "pm.expect(post.status).to.eql('unpublished');"
            ]
          }
        }
      ]
    },
    {
      "name": "Delete Post (Author)",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{author_access_token}}" }
        ],
        "url": "{{base_url}}/posts/{{latest_post_id}}"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Post deleted', function () { pm.response.to.have.status(200); });"
            ]
          }
        }
      ]
    }
  ]
}
    